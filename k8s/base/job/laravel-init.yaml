apiVersion: batch/v1
kind: Job
metadata:
  name: laravel-init
  namespace: portafolio
  labels:
    app: laravel-app
spec:
  template:
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
      containers:
        - name: laravel-init
          image: migbertweb/laravel-prueba
          command:
            - /bin/bash
            - -c
            - |
              set -e
              echo "=== Iniciando preparación para producción ==="

              # Esperar a que la base de datos esté disponible usando un método simple
              echo "[INFO] Verificando conexión a la base de datos..."
              until php -r "
                try {
                    \$pdo = new PDO(
                        'mysql:host=' . getenv('DB_HOST') . ';port=' . getenv('DB_PORT') . ';dbname=' . getenv('DB_DATABASE'),
                        getenv('DB_USERNAME'),
                        getenv('DB_PASSWORD'),
                        [PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION]
                    );
                    echo 'Database connection successful';
                    exit(0);
                } catch (Exception \$e) {
                    exit(1);
                }
              " 2>/dev/null; do
                echo "[WAIT] Esperando conexión a la base de datos..."
                sleep 5
              done
              echo "[OK] Conexión a la base de datos establecida"

              # Ejecutar migraciones
              echo "[INFO] Ejecutando migraciones..."
              php artisan migrate --force
              echo "[OK] Migraciones completadas"

              # Instalar dependencias de Node.js
              echo "[INFO] Instalando dependencias de Node.js..."
              npm ci --only=production
              echo "[OK] Dependencias de Node.js instaladas"

              # Build de assets para producción
              echo "[INFO] Construyendo assets para producción..."
              npm run build
              echo "[OK] Assets construidos para producción"

              # Optimización de Laravel
              echo "[INFO] Optimizando Laravel..."
              php artisan optimize
              php artisan config:cache
              php artisan route:cache
              php artisan view:cache
              echo "[OK] Laravel optimizado"

              # Limpiar archivos temporales
              echo "[INFO] Limpiando archivos temporales..."
              rm -rf node_modules
              echo "[OK] Limpieza completada"

              echo "=== Preparación para producción completada exitosamente ==="
          envFrom:
            - configMapRef:
                name: laravel-config-env
            - secretRef:
                name: laravel-secret-env
          volumeMounts:
            - name: laravel-storage
              mountPath: /var/www/storage
              subPath: ""
          resources:
            requests:
              memory: "512Mi"
              cpu: "300m"
            limits:
              memory: "1Gi"
              cpu: "800m"
      volumes:
        - name: laravel-storage
          persistentVolumeClaim:
            claimName: laravel-storage-pvc
      restartPolicy: Never
  backoffLimit: 3
